// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: hnswservice.proto

package grpcapi

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// SpaceType is the vector space.
type CreateIndexRequest_SpaceType int32

const (
	CreateIndexRequest_L2     CreateIndexRequest_SpaceType = 0
	CreateIndexRequest_IP     CreateIndexRequest_SpaceType = 1
	CreateIndexRequest_COSINE CreateIndexRequest_SpaceType = 2
)

// Enum value maps for CreateIndexRequest_SpaceType.
var (
	CreateIndexRequest_SpaceType_name = map[int32]string{
		0: "L2",
		1: "IP",
		2: "COSINE",
	}
	CreateIndexRequest_SpaceType_value = map[string]int32{
		"L2":     0,
		"IP":     1,
		"COSINE": 2,
	}
)

func (x CreateIndexRequest_SpaceType) Enum() *CreateIndexRequest_SpaceType {
	p := new(CreateIndexRequest_SpaceType)
	*p = x
	return p
}

func (x CreateIndexRequest_SpaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateIndexRequest_SpaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_hnswservice_proto_enumTypes[0].Descriptor()
}

func (CreateIndexRequest_SpaceType) Type() protoreflect.EnumType {
	return &file_hnswservice_proto_enumTypes[0]
}

func (x CreateIndexRequest_SpaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateIndexRequest_SpaceType.Descriptor instead.
func (CreateIndexRequest_SpaceType) EnumDescriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{0, 0}
}

type CreateIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName      string                       `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Dim            int32                        `protobuf:"varint,2,opt,name=dim,proto3" json:"dim,omitempty"`
	EfConstruction int32                        `protobuf:"varint,3,opt,name=efConstruction,proto3" json:"efConstruction,omitempty"`
	M              int32                        `protobuf:"varint,4,opt,name=m,proto3" json:"m,omitempty"`
	MaxElements    int32                        `protobuf:"varint,5,opt,name=max_elements,json=maxElements,proto3" json:"max_elements,omitempty"`
	Seed           int32                        `protobuf:"varint,6,opt,name=seed,proto3" json:"seed,omitempty"`
	SpaceType      CreateIndexRequest_SpaceType `protobuf:"varint,7,opt,name=space_type,json=spaceType,proto3,enum=grpcapi.CreateIndexRequest_SpaceType" json:"space_type,omitempty"`
	AutoId         bool                         `protobuf:"varint,8,opt,name=auto_id,json=autoId,proto3" json:"auto_id,omitempty"`
}

func (x *CreateIndexRequest) Reset() {
	*x = CreateIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIndexRequest) ProtoMessage() {}

func (x *CreateIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIndexRequest.ProtoReflect.Descriptor instead.
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *CreateIndexRequest) GetDim() int32 {
	if x != nil {
		return x.Dim
	}
	return 0
}

func (x *CreateIndexRequest) GetEfConstruction() int32 {
	if x != nil {
		return x.EfConstruction
	}
	return 0
}

func (x *CreateIndexRequest) GetM() int32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *CreateIndexRequest) GetMaxElements() int32 {
	if x != nil {
		return x.MaxElements
	}
	return 0
}

func (x *CreateIndexRequest) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *CreateIndexRequest) GetSpaceType() CreateIndexRequest_SpaceType {
	if x != nil {
		return x.SpaceType
	}
	return CreateIndexRequest_L2
}

func (x *CreateIndexRequest) GetAutoId() bool {
	if x != nil {
		return x.AutoId
	}
	return false
}

type InsertVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string  `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Vector    *Vector `protobuf:"bytes,2,opt,name=vector,proto3" json:"vector,omitempty"`
}

func (x *InsertVectorRequest) Reset() {
	*x = InsertVectorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorRequest) ProtoMessage() {}

func (x *InsertVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorRequest.ProtoReflect.Descriptor instead.
func (*InsertVectorRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{1}
}

func (x *InsertVectorRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *InsertVectorRequest) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

type InsertVectorWithIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string  `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Id        int32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Vector    *Vector `protobuf:"bytes,3,opt,name=vector,proto3" json:"vector,omitempty"`
}

func (x *InsertVectorWithIdRequest) Reset() {
	*x = InsertVectorWithIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorWithIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorWithIdRequest) ProtoMessage() {}

func (x *InsertVectorWithIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorWithIdRequest.ProtoReflect.Descriptor instead.
func (*InsertVectorWithIdRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{2}
}

func (x *InsertVectorWithIdRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *InsertVectorWithIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InsertVectorWithIdRequest) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string  `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Vector    *Vector `protobuf:"bytes,2,opt,name=vector,proto3" json:"vector,omitempty"`
	K         int32   `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{3}
}

func (x *SearchRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SearchRequest) GetVector() *Vector {
	if x != nil {
		return x.Vector
	}
	return nil
}

func (x *SearchRequest) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []float32 `protobuf:"fixed32,1,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{4}
}

func (x *Vector) GetValue() []float32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type DeleteIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
}

func (x *DeleteIndexRequest) Reset() {
	*x = DeleteIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIndexRequest) ProtoMessage() {}

func (x *DeleteIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIndexRequest.ProtoReflect.Descriptor instead.
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteIndexRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

type IndicesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices []string `protobuf:"bytes,1,rep,name=indices,proto3" json:"indices,omitempty"`
}

func (x *IndicesReply) Reset() {
	*x = IndicesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicesReply) ProtoMessage() {}

func (x *IndicesReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicesReply.ProtoReflect.Descriptor instead.
func (*IndicesReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{6}
}

func (x *IndicesReply) GetIndices() []string {
	if x != nil {
		return x.Indices
	}
	return nil
}

type FlushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
}

func (x *FlushRequest) Reset() {
	*x = FlushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushRequest) ProtoMessage() {}

func (x *FlushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushRequest.ProtoReflect.Descriptor instead.
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{7}
}

func (x *FlushRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

type InsertVectorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Took is the number of milliseconds it took the server to execute the request.
	Took int64 `protobuf:"varint,2,opt,name=took,proto3" json:"took,omitempty"`
}

func (x *InsertVectorReply) Reset() {
	*x = InsertVectorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorReply) ProtoMessage() {}

func (x *InsertVectorReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorReply.ProtoReflect.Descriptor instead.
func (*InsertVectorReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{8}
}

func (x *InsertVectorReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InsertVectorReply) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

type InsertVectorWithIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Took is the number of milliseconds it took the server to execute the request.
	Took int64 `protobuf:"varint,2,opt,name=took,proto3" json:"took,omitempty"`
}

func (x *InsertVectorWithIdReply) Reset() {
	*x = InsertVectorWithIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorWithIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorWithIdReply) ProtoMessage() {}

func (x *InsertVectorWithIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorWithIdReply.ProtoReflect.Descriptor instead.
func (*InsertVectorWithIdReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{9}
}

func (x *InsertVectorWithIdReply) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

type InsertVectorsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// Took is the number of milliseconds it took the server to execute the request.
	Took int64 `protobuf:"varint,2,opt,name=took,proto3" json:"took,omitempty"`
}

func (x *InsertVectorsReply) Reset() {
	*x = InsertVectorsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsReply) ProtoMessage() {}

func (x *InsertVectorsReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsReply.ProtoReflect.Descriptor instead.
func (*InsertVectorsReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{10}
}

func (x *InsertVectorsReply) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *InsertVectorsReply) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

type InsertVectorsWithIdsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Took is the number of milliseconds it took the server to execute the request.
	Took int64 `protobuf:"varint,2,opt,name=took,proto3" json:"took,omitempty"`
}

func (x *InsertVectorsWithIdsReply) Reset() {
	*x = InsertVectorsWithIdsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertVectorsWithIdsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsWithIdsReply) ProtoMessage() {}

func (x *InsertVectorsWithIdsReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsWithIdsReply.ProtoReflect.Descriptor instead.
func (*InsertVectorsWithIdsReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{11}
}

func (x *InsertVectorsWithIdsReply) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

// Hit represents a the result of a search
type SearchKNNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hits []*Hit `protobuf:"bytes,1,rep,name=hits,proto3" json:"hits,omitempty"`
	// Took is the number of milliseconds it took the server to execute the request.
	Took int64 `protobuf:"varint,2,opt,name=took,proto3" json:"took,omitempty"`
}

func (x *SearchKNNReply) Reset() {
	*x = SearchKNNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchKNNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchKNNReply) ProtoMessage() {}

func (x *SearchKNNReply) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchKNNReply.ProtoReflect.Descriptor instead.
func (*SearchKNNReply) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{12}
}

func (x *SearchKNNReply) GetHits() []*Hit {
	if x != nil {
		return x.Hits
	}
	return nil
}

func (x *SearchKNNReply) GetTook() int64 {
	if x != nil {
		return x.Took
	}
	return 0
}

// Hit represents a single result
type Hit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`               // the id of the stored vector
	Distance float32 `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"` // the distance between the stored vector and the query vector
}

func (x *Hit) Reset() {
	*x = Hit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hit) ProtoMessage() {}

func (x *Hit) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hit.ProtoReflect.Descriptor instead.
func (*Hit) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{13}
}

func (x *Hit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Hit) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type SetEfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexName string `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Value     int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetEfRequest) Reset() {
	*x = SetEfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hnswservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetEfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetEfRequest) ProtoMessage() {}

func (x *SetEfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hnswservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetEfRequest.ProtoReflect.Descriptor instead.
func (*SetEfRequest) Descriptor() ([]byte, []int) {
	return file_hnswservice_proto_rawDescGZIP(), []int{14}
}

func (x *SetEfRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *SetEfRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_hnswservice_proto protoreflect.FileDescriptor

var file_hnswservice_proto_rawDesc = []byte{
	0x0a, 0x11, 0x68, 0x6e, 0x73, 0x77, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x02, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69,
	0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x66, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x27, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x32,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f,
	0x53, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x22, 0x5d, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x73, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x65, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x6b, 0x22, 0x1e, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x33, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x22, 0x2d, 0x0a, 0x0c, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x37, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x22, 0x2d, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x22, 0x3a, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x6f, 0x6f, 0x6b, 0x22, 0x2f, 0x0a, 0x19, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x6f, 0x6f, 0x6b, 0x22, 0x46, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x4e,
	0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x69, 0x74, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x22, 0x31, 0x0a, 0x03,
	0x48, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x43, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x45, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0xe7, 0x05, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x5c, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x12, 0x22, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x73, 0x12, 0x22, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x3e, 0x0a, 0x09, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x4e, 0x4e, 0x12, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b,
	0x4e, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70,
	0x69, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x45, 0x66, 0x12, 0x15, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x45, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x41,
	0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x2f, 0x68, 0x6e, 0x73, 0x77, 0x67, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hnswservice_proto_rawDescOnce sync.Once
	file_hnswservice_proto_rawDescData = file_hnswservice_proto_rawDesc
)

func file_hnswservice_proto_rawDescGZIP() []byte {
	file_hnswservice_proto_rawDescOnce.Do(func() {
		file_hnswservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_hnswservice_proto_rawDescData)
	})
	return file_hnswservice_proto_rawDescData
}

var file_hnswservice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hnswservice_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_hnswservice_proto_goTypes = []interface{}{
	(CreateIndexRequest_SpaceType)(0), // 0: grpcapi.CreateIndexRequest.SpaceType
	(*CreateIndexRequest)(nil),        // 1: grpcapi.CreateIndexRequest
	(*InsertVectorRequest)(nil),       // 2: grpcapi.InsertVectorRequest
	(*InsertVectorWithIdRequest)(nil), // 3: grpcapi.InsertVectorWithIdRequest
	(*SearchRequest)(nil),             // 4: grpcapi.SearchRequest
	(*Vector)(nil),                    // 5: grpcapi.Vector
	(*DeleteIndexRequest)(nil),        // 6: grpcapi.DeleteIndexRequest
	(*IndicesReply)(nil),              // 7: grpcapi.IndicesReply
	(*FlushRequest)(nil),              // 8: grpcapi.FlushRequest
	(*InsertVectorReply)(nil),         // 9: grpcapi.InsertVectorReply
	(*InsertVectorWithIdReply)(nil),   // 10: grpcapi.InsertVectorWithIdReply
	(*InsertVectorsReply)(nil),        // 11: grpcapi.InsertVectorsReply
	(*InsertVectorsWithIdsReply)(nil), // 12: grpcapi.InsertVectorsWithIdsReply
	(*SearchKNNReply)(nil),            // 13: grpcapi.SearchKNNReply
	(*Hit)(nil),                       // 14: grpcapi.Hit
	(*SetEfRequest)(nil),              // 15: grpcapi.SetEfRequest
	(*emptypb.Empty)(nil),             // 16: google.protobuf.Empty
}
var file_hnswservice_proto_depIdxs = []int32{
	0,  // 0: grpcapi.CreateIndexRequest.space_type:type_name -> grpcapi.CreateIndexRequest.SpaceType
	5,  // 1: grpcapi.InsertVectorRequest.vector:type_name -> grpcapi.Vector
	5,  // 2: grpcapi.InsertVectorWithIdRequest.vector:type_name -> grpcapi.Vector
	5,  // 3: grpcapi.SearchRequest.vector:type_name -> grpcapi.Vector
	14, // 4: grpcapi.SearchKNNReply.hits:type_name -> grpcapi.Hit
	1,  // 5: grpcapi.Server.CreateIndex:input_type -> grpcapi.CreateIndexRequest
	6,  // 6: grpcapi.Server.DeleteIndex:input_type -> grpcapi.DeleteIndexRequest
	2,  // 7: grpcapi.Server.InsertVector:input_type -> grpcapi.InsertVectorRequest
	2,  // 8: grpcapi.Server.InsertVectors:input_type -> grpcapi.InsertVectorRequest
	3,  // 9: grpcapi.Server.InsertVectorWithId:input_type -> grpcapi.InsertVectorWithIdRequest
	3,  // 10: grpcapi.Server.InsertVectorsWithIds:input_type -> grpcapi.InsertVectorWithIdRequest
	4,  // 11: grpcapi.Server.SearchKNN:input_type -> grpcapi.SearchRequest
	8,  // 12: grpcapi.Server.FlushIndex:input_type -> grpcapi.FlushRequest
	16, // 13: grpcapi.Server.Indices:input_type -> google.protobuf.Empty
	15, // 14: grpcapi.Server.SetEf:input_type -> grpcapi.SetEfRequest
	16, // 15: grpcapi.Server.CreateIndex:output_type -> google.protobuf.Empty
	16, // 16: grpcapi.Server.DeleteIndex:output_type -> google.protobuf.Empty
	9,  // 17: grpcapi.Server.InsertVector:output_type -> grpcapi.InsertVectorReply
	11, // 18: grpcapi.Server.InsertVectors:output_type -> grpcapi.InsertVectorsReply
	10, // 19: grpcapi.Server.InsertVectorWithId:output_type -> grpcapi.InsertVectorWithIdReply
	12, // 20: grpcapi.Server.InsertVectorsWithIds:output_type -> grpcapi.InsertVectorsWithIdsReply
	13, // 21: grpcapi.Server.SearchKNN:output_type -> grpcapi.SearchKNNReply
	16, // 22: grpcapi.Server.FlushIndex:output_type -> google.protobuf.Empty
	7,  // 23: grpcapi.Server.Indices:output_type -> grpcapi.IndicesReply
	16, // 24: grpcapi.Server.SetEf:output_type -> google.protobuf.Empty
	15, // [15:25] is the sub-list for method output_type
	5,  // [5:15] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_hnswservice_proto_init() }
func file_hnswservice_proto_init() {
	if File_hnswservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hnswservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorWithIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorWithIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertVectorsWithIdsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchKNNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hnswservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetEfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hnswservice_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hnswservice_proto_goTypes,
		DependencyIndexes: file_hnswservice_proto_depIdxs,
		EnumInfos:         file_hnswservice_proto_enumTypes,
		MessageInfos:      file_hnswservice_proto_msgTypes,
	}.Build()
	File_hnswservice_proto = out.File
	file_hnswservice_proto_rawDesc = nil
	file_hnswservice_proto_goTypes = nil
	file_hnswservice_proto_depIdxs = nil
}
